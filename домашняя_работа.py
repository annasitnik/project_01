# -*- coding: utf-8 -*-
"""домашняя работа.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10OBEKXXILFG_aZ6csAuAkZZfNbg1epB9
"""

# Задача 1
# Задача 1.1.

# Есть строка с перечислением песен

my_favorite_songs = 'Потрать мгновение оставаясь живым своего рода сказка вдохнови меня Новое спасение'
# Выведите на консоль с помощью индексации строки, последовательно: первый трек, последний, второй, второй с конца
# Нельзя переопределять my_favorite_songs и запятая не должна выводиться.



print('первый трек:', my_favorite_songs[:17],'\n',
      'последний:', my_favorite_songs[-14:], '\n',
      'второй:', my_favorite_songs[17:34], '\n',
      'второй с конца:', my_favorite_songs[-29:-15])

# Задача 2
# Задача 1.2.

# Пункт A.
# Приведем плейлист песен в виде списка списков
# Список my_favorite_songs содержит список названий и длительности каждого трека
# Выведите общее время звучания трех случайных песен в формате
# Три песни звучат ХХХ минут

# Дополнительно для пунктов A и B
# Пункт C.
# Сгенерируйте случайные песни с помощью модуля random
# import random

# Дополнительно
# Пункт D.
# Переведите минуты и секунды в формат времени. Используйте модуль datetime

import random
import datetime
my_favorite_songs = [
    ['Waste a Moment', 3.03],
    ['New Salvation', 4.02],
    ['Staying\' Alive', 3.40],
    ['Out of Touch', 3.03],
    ['A Sorta Fairytale', 5.28],
    ['Easy', 4.15],
    ['Beautiful Day', 4.04],
    ['Nowhere to Run', 2.58],
    ['In This World', 4.02],
]
import random
import datetime
my_favorite_songs = [
    ['Waste a Moment', 3.03],
    ['New Salvation', 4.02],
    ['Staying\' Alive', 3.40],
    ['Out of Touch', 3.03],
    ['A Sorta Fairytale', 5.28],
    ['Easy', 4.15],
    ['Beautiful Day', 4.04],
    ['Nowhere to Run', 2.58],
    ['In This World', 4.02],
]
my_favorite_songs_3 = random.sample(my_favorite_songs, 3)
print(my_favorite_songs_3)
l = [my_favorite_songs_3[0][1], my_favorite_songs_3[1][1], my_favorite_songs_3[2][1]] # список сколько по времени играют песни
print(l)
m = int(l[0]) + int(l[1]) + int(l[2]) #  посчитали минуты
s = (l[0] - int(l[0])) * 100 + (l[1] - int(l[1])) * 100 + (l[2] - int(l[2])) * 100 # количество секунд
res = m * 60 + s # приведение к секундам
total_res = round(res // 60 + (res % 60) / 100, 2)
print('Три песни звучат', total_res, 'минут')
t = str(total_res).split('.')
if len(t[1]) == 1 :
    t[1] += '0'
total_t = datetime.time(0, int(t[0]), int(t[1]))
print('Три песни звучат', total_t, 'минут')

# Продолжение задачи

import random
import datetime
my_favorite_songs_dict = {
    'Waste a Moment': 3.03,
    'New Salvation': 4.02,
    'Staying\' Alive': 3.40,
    'Out of Touch': 3.03,
    'A Sorta Fairytale': 5.28,
    'Easy': 4.15,
    'Beautiful Day': 4.04,
    'Nowhere to Run': 2.58,
    'In This World': 4.02,
}
lst = []
for key in my_favorite_songs_dict.keys() :
    lst.append(key)  #  список песен
lst_3 = random.sample(lst, 3)  # список трёх случайных песен
print(lst_3)
l = []
for i in lst_3 :
    l.append(my_favorite_songs_dict[i])  # список со временем звучания песен
print(l)
m = int(l[0]) + int(l[1]) + int(l[2]) #  посчитали минуты
s = (l[0] - int(l[0])) * 100 + (l[1] - int(l[1])) * 100 + (l[2] - int(l[2])) * 100 # количество секунды
res = m * 60 + s # приведение к секундам
total_res = round(res // 60 + (res % 60) / 100, 2)
print('Три песни звучат', total_res, 'минут')
t = str(total_res).split('.')
if len(t[1]) == 1 :
    t[1] += '0'
total_t = datetime.time(0, int(t[0]), int(t[1]))
print('Три песни звучат', total_t, 'минут')

# Задача 3
# Задача 1.3.

# Напишите скрипт, который принимает от пользователя номер месяца,
# а возвращает количество дней в нем.
# Результат проверки вывести на консоль
# Допущение: в феврале 28 дней
# Если номер месяца некорректен - сообщить об этом
# Например,
    # Введите номер месяца: 3
    # Вы ввели март. 31 дней
    # Введите номер месяца: 2
    # Вы ввели февраль. 28 дней
    # Введите номер месяца: 15
    # Такого месяца нет!


month = int(input('Введите номер месяца: '))
while not 1 <= month <= 12 :
  print('Такого месяца нет!')
  month = int(input('Введите номер месяца: '))
list_of_months = ['Январь.', 'Февраль.', 'Март.', 'Апрель.', 'Май.', 'Июнь.',
                  'Июль.', 'Август.', 'Сентябрь.', 'Октябрь.', 'Ноябрь.', 'Декабрь.']
list_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
print('Вы ввели', list_of_months[month - 1], list_of_days[month - 1], 'дней')

# Задача 4
# Задача 1.4.

# Есть словарь кодов товаров titles

titles = {
    'Кроссовки тип 3 (Adidas)': '100000110',
    'Мячик тип 2 (Adidas)': '100000146',
    'Кепка тип 1 (Adidas)': '100000149',
    'Ремень тип 2 (Nike)': '100000194',
    'Футболка тип 1 (Adidas)': '100000224',
    'Шапка тип 5 (Puma)': '100000280',
}
# Товары находятся на складе и сохранены в виде словаря списков словарей,
# которые отражают количество товаров в магазине по каждому коду.
store = {
    '100000110': [{'quantity': 31, 'price': 1637}],
    '100000146': [ {'quantity': 4, 'price': 45}, {'quantity': 10, 'price': 48}],
    '100000149': [ {'quantity': 28, 'price': 279}, {'quantity': 32, 'price': 291}],
    '100000194': [{'quantity': 8, 'price': 220}, {'quantity': 1, 'price': 170}],
    '100000224': [{'quantity': 61, 'price': 438}, {'quantity': 23, 'price': 302},  {'quantity': 50, 'price': 412}],
    '100000280': [{'quantity': 26, 'price': 175}, ]
}
# Рассчитайте на какую сумму лежит каждого товара на складе.
#
# Вывести суммарную стоимость каждого товара в магазине в формате:
# "<товар> - <кол-во> шт, стоимость <общая стоимость> руб"
# Пример: "Кроссовки тип 3 (Adidas) - 31 шт, стоимость 50747 руб"



for product_name, code in titles.items():
  quantity = 0
  price = 0
  cost = 0
  for titles in store[code]:
    quantity = titles['quantity']
    price = titles['price']
    cost = quantity * price
    print('{0} - {1} шт, общая стоимость {2} руб'.format(product_name, quantity, cost))

# Задача 2.1.

# Создайте две функции maximum и minimum,
# которые получают список целых чисел в качестве входных данных
# и возвращают наибольшее и наименьшее число в этом списке соответственно.
# Например,
# * [4,6,2,1,9,63,-134,566]         -> max = 566, min = -134
# * [-52, 56, 30, 29, -54, 0, -110] -> min = -110, max = 56
# * [42, 54, 65, 87, 0]             -> min = 0, max = 87
# * [5]                             -> min = 5, max = 5
# функции sorted, max и min использовать нельзя!

import random

def minimum(arr, n):
    mn = 100  # присвоили значение переменной по максимальной границе списка
    for i in range(n) :
      if arr[i] <= mn :
        mn = arr[i]
    return mn

def maximum(arr, n):
    mx = - 100  # присвоили значение переменной по минимальной границе списка
    for i in range(n) :
      if arr[i] >= mx :
        mx = arr[i]
    return mx

a = random.randint(1, 10)  # длина списка
lst = [random.randint(-100, 100) for _ in range(a)]  # создаём список
print(lst)
print(f'min = {minimum(lst, a)}, max = {maximum(lst, a)}')

# Задача 2.2.

# Напишите функцию, которая возвращает номер квартал по номеру месяца
# Например:
# месяц 2 (февраль) является частью первого квартала;
# месяц 6 (июнь) является частью второго квартала;
# месяц 11 (ноябрь) является частью четвертого квартала.

def quarter_of(month):
  if month in [1, 2, 3] :
    return 'первого'
  elif month in [4, 5, 6] :
    return 'второго'
  elif month in [7, 8, 9] :
    return 'третьего'
  else :
    return 'четвёртого'

num = int(input('Введите номер месяца: '))
while not 1 <= num <= 12 :
  print('Такого месяца нет!')
  num = int(input('Введите номер месяца: '))
months = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
          'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']
print(f'месяц {num} ({months[num - 1]}) является частью {quarter_of(num)} квартала')

# Задача 2.3.

# Напишите функцию, которая принимает цифры от 0 до 9 и возвращает значение прописью.
# Например,
# switch_it_up(1) -> 'One'
# switch_it_up(3) -> 'Three'
# switch_it_up(10000) -> None
# Использовать условный оператор if-elif-else нельзя!


def switch_it_up(number):
  r=['ноль', 'один','два', 'три','четыри', 'пять','шесть', 'семь','восемь', 'девять']
  for number in range(0,9):
    return r[n]
n=int(input("Введите число от 0 до 9 "))
print(switch_it_up(n))